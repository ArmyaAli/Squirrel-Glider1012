name: dashboard deployment flow

on:
  push:
    branches: [ "development" ]
    paths:
      - .github/workflows/**
      - server/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    - run: | 
        cd server 
        npm ci 
        npm run build --if-present 
  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create SSH Key
      run: touch key 
    - name: Populate key
      run: 'echo "$SSH_KEY" > key'
      shell: bash
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    - name: set permissions
      run: chmod 400 key
    - name: Create .env file and populate it
      run: 'touch .env && echo "$ENV" > .env'
      shell: bash
      env:
        ENV: ${{ secrets.ENV_FILE }}
    - name: Send .env file to PI
      run: scp -o StrictHostKeyChecking=no -i key .env $USER@$ENDPOINT:~/dev/tmp
      env:
        USER: ${{ secrets.USER }}
        ENDPOINT: ${{ secrets.ENDPOINT }}
    - name: SSH into the server
      shell: bash
      run: ssh -t -o StrictHostKeyChecking=no -i key $USER@$ENDPOINT -t \
        '
        bash -i -c \
        "
        cd ~/dev;
        rm -rf Squirrel-Glider1012;
        sudo pm2 stop server;
        git clone --filter=blob:none --sparse https://github.com/ArmyaAli/Squirrel-Glider1012.git;
        cd Squirrel-Glider1012;
        git sparse-checkout add server;
        cd server;
        npm ci;
        npm run build;
        sudo cp -avf build/. /var/www/lordmushroom.dev/api/glider_server;
        sudo cp -avf node_modules /var/www/lordmushroom.dev/api/glider_server;
        sudo mv /home/ubuntu/dev/tmp/.env /var/www/lordmushroom.dev/api/glider_server;  
        pm2 start /var/www/lordmushroom.dev/api/glider_server/server.js;
        ls -al;
        "'
      env:
        USER: ${{ secrets.USER }}
        ENDPOINT: ${{ secrets.ENDPOINT }}
